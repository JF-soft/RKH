

/**** FILE 'C:\Users\francucci\Desktop\rkhrel\source\include\rkhsm.h' */


/*        6 */ 

/**** FILE 'C:\Users\francucci\Desktop\rkhrel\source\include\rkhsm.h' */


/*       42 */ 

/**** FILE 'stdlib.h' */


/*       17 */ 

/**** FILE 'stddef.h' */


/*       22 */  typedef unsigned int size_t ;
/*       35 */  typedef signed int ptrdiff_t ;
/*       44 */  typedef unsigned char wchar_t ;
/*       56 */  typedef unsigned long clock_t ;
/*       58 */  typedef unsigned long time_t ;
/*       75 */ 

/**** FILE 'stdlib.h' */


/*       18 */ 

/**** FILE 'libdefs.h' */


/*       34 */ 

/**** FILE 'hidef.h' */


/*       21 */ 

/**** FILE 'stdtypes.h' */


/*       26 */  typedef void ( * PROC ) ( void ) ;
/*       30 */  typedef unsigned char Byte ;
/*       31 */  typedef signed char sByte ;
/*       61 */  typedef unsigned int Word ;
/*       62 */  typedef signed int sWord ;
/*       88 */  typedef unsigned long LWord ;
/*       89 */  typedef signed long sLWord ;
/*      102 */  typedef unsigned char uchar ;
/*      104 */  typedef unsigned int uint ;
/*      106 */  typedef unsigned long ulong ;
/*      109 */  typedef unsigned long long ullong ;
/*      113 */  typedef signed char schar ;
/*      115 */  typedef signed int sint ;
/*      117 */  typedef signed long slong ;
/*      120 */  typedef signed long long sllong ;
/*      137 */  typedef sWord enum_t ;
/*      153 */  typedef int Bool ;
/*      176 */ 

/**** FILE 'hidef.h' */


/*      102 */  #pragma NO_STRING_CONSTR
/*      116 */  extern char __SEG_END_SSTACK [ ] ;
/*      169 */ 

/**** FILE 'libdefs.h' */


/*      145 */  typedef const char * __far ConstString ;
/*      147 */  typedef const char * __far LIBDEF_ConstStringPtr ;
/*      149 */  typedef char * __far LIBDEF_StringPtr ;
/*      152 */  typedef const void * __far ConstMem ;
/*      154 */  typedef const void * __far LIBDEF_ConstMemPtr ;
/*      156 */  typedef void * __far LIBDEF_MemPtr ;
/*      158 */  typedef char LIBDEF_MemByte ;
/*      160 */  typedef LIBDEF_MemByte * __far LIBDEF_MemBytePtr ;
/*      162 */  typedef const LIBDEF_MemByte * __far LIBDEF_ConstMemBytePtr ;
/*      325 */ 

/**** FILE 'stdlib.h' */


/*       19 */  typedef struct _div_t {
/*       20 */  int quot , rem ;
/*       21 */  } div_t ;
/*       23 */  typedef struct _ldiv_t {
/*       24 */  long int quot , rem ;
/*       25 */  } ldiv_t ;
/*       49 */  LIBDEF_StringPtr _itoa ( int val , LIBDEF_StringPtr buf , int radix ) ;
/*       53 */  extern double strtod ( LIBDEF_ConstStringPtr s , LIBDEF_StringPtr * end ) ;
/*       54 */  extern long int strtol ( LIBDEF_ConstStringPtr s , LIBDEF_StringPtr * end , int base ) ;
/*       55 */  extern unsigned long int strtoul ( LIBDEF_ConstStringPtr s , LIBDEF_StringPtr * end , int base ) ;
/*       58 */  extern int rand ( void ) ;
/*       59 */  extern void srand ( unsigned int seed ) ;
/*       62 */  extern void * calloc ( size_t n , size_t size ) ;
/*       63 */  extern void free ( void * ptr ) ;
/*       64 */  extern void * malloc ( size_t size ) ;
/*       65 */  extern void * realloc ( void * ptr , size_t size ) ;
/*       68 */  extern void abort ( void ) ;
/*       69 */  extern int atexit ( void ( * func ) ( void ) ) ;
/*       70 */  extern void exit ( int status ) ;
/*       73 */  extern LIBDEF_StringPtr getenv ( LIBDEF_ConstStringPtr name ) ;
/*       74 */  extern int system ( LIBDEF_ConstStringPtr cmd ) ;
/*       77 */  extern LIBDEF_MemPtr bsearch ( LIBDEF_ConstMemPtr look_for ,
/*       78 */  LIBDEF_ConstMemPtr base_addr ,
/*       79 */  size_t n , size_t size ,
/*       80 */  int ( * cmp ) ( LIBDEF_ConstMemPtr , LIBDEF_ConstMemPtr ) ) ;
/*       81 */  extern void qsort ( LIBDEF_ConstMemPtr base ,
/*       82 */  size_t n , size_t size ,
/*       83 */  int ( * cmp ) ( LIBDEF_ConstMemPtr , LIBDEF_ConstMemPtr ) ) ;
/*       89 */  extern int abs ( int j ) ;
/*       90 */  extern long int labs ( long int j ) ;
/*       92 */  extern div_t div ( int dividend , int divisor ) ;
/*       93 */  extern ldiv_t ldiv ( long int dividend , long int divisor ) ;
/*       97 */  extern int mblen ( LIBDEF_ConstStringPtr mbs , size_t n ) ;
/*       98 */  extern int mbtowc ( wchar_t * wc , LIBDEF_ConstStringPtr mb , size_t n ) ;
/*       99 */  extern int wctomb ( LIBDEF_StringPtr mb , wchar_t wc ) ;
/*      100 */  extern size_t mbstowcs ( wchar_t * wc , LIBDEF_ConstStringPtr mb , size_t n ) ;
/*      101 */  extern size_t wcstombs ( LIBDEF_StringPtr mb , const wchar_t * wc , size_t n ) ;
/*      113 */ 

/**** FILE 'C:\Users\francucci\Desktop\rkhrel\source\include\rkhsm.h' */


/*       43 */ 

/**** FILE 'rkh.h' */


/*       46 */ 

/**** FILE 'rkhcfg.h' */


/*       65 */ 

/**** FILE 'rkh.h' */


/*       53 */ 

/**** FILE 'rkhplat.h' */


/*       53 */ 

/**** FILE 'rkh.h' */


/*       60 */ 

/**** FILE 'rkhdata.h' */


/*       10 */  enum
/*       11 */  {
/*       12 */  MY , RKH_NUM_RKHS
/*       13 */  } ;
/*       19 */ 

/**** FILE 'rkh.h' */


/*       67 */ 

/**** FILE 'rkhtrace.h' */


/*       70 */ 

/**** FILE 'rkh.h' */


/*      759 */ 

/**** FILE 'rkhtrace.h' */


/*       71 */ 

/**** FILE 'string.h' */


/*       50 */  extern LIBDEF_MemPtr memchr ( LIBDEF_ConstMemPtr buffer , int chr , size_t count ) ;
/*       51 */  extern int memcmp ( LIBDEF_ConstMemPtr buf1 , LIBDEF_ConstMemPtr buf2 , size_t count ) ;
/*       52 */  extern LIBDEF_MemPtr memcpy ( LIBDEF_MemPtr dest , LIBDEF_ConstMemPtr source , size_t count ) ;
/*       54 */  extern void memcpy2 ( LIBDEF_MemPtr dest , LIBDEF_ConstMemPtr source , size_t count ) ;
/*       56 */  extern void _memcpy_8bitCount ( LIBDEF_MemPtr dest , LIBDEF_ConstMemPtr source , unsigned char count ) ;
/*       59 */  extern LIBDEF_MemPtr memmove ( LIBDEF_MemPtr dest , LIBDEF_ConstMemPtr source , size_t count ) ;
/*       60 */  extern LIBDEF_MemPtr memset ( LIBDEF_MemPtr buffer , int chr , size_t count ) ;
/*       61 */  extern void _memset_clear_8bitCount ( LIBDEF_MemPtr buffer , unsigned char count ) ;
/*       69 */  extern size_t strlen ( LIBDEF_ConstStringPtr str ) ;
/*       70 */  extern LIBDEF_StringPtr strset ( LIBDEF_StringPtr str , int chr ) ;
/*       71 */  extern LIBDEF_StringPtr strcat ( LIBDEF_StringPtr str_d , LIBDEF_ConstStringPtr str_s ) ;
/*       72 */  extern LIBDEF_StringPtr strncat ( LIBDEF_StringPtr str_d , LIBDEF_ConstStringPtr str_s , size_t count ) ;
/*       73 */  extern LIBDEF_StringPtr strcpy ( LIBDEF_StringPtr str_d , LIBDEF_ConstStringPtr str_s ) ;
/*       74 */  extern LIBDEF_StringPtr strncpy ( LIBDEF_StringPtr str_d , LIBDEF_ConstStringPtr str_s , size_t count ) ;
/*       75 */  extern int strcmp ( LIBDEF_ConstStringPtr str1 , LIBDEF_ConstStringPtr str2 ) ;
/*       76 */  extern int strncmp ( LIBDEF_ConstStringPtr str1 , LIBDEF_ConstStringPtr str2 , size_t count ) ;
/*       77 */  extern LIBDEF_StringPtr strchr ( LIBDEF_ConstStringPtr str , int chr ) ;
/*       78 */  extern LIBDEF_StringPtr strrchr ( LIBDEF_ConstStringPtr str , int chr ) ;
/*       79 */  extern size_t strspn ( LIBDEF_ConstStringPtr str1 , LIBDEF_ConstStringPtr str2 ) ;
/*       80 */  extern size_t strcspn ( LIBDEF_ConstStringPtr str1 , LIBDEF_ConstStringPtr str2 ) ;
/*       81 */  extern LIBDEF_StringPtr strpbrk ( LIBDEF_ConstStringPtr str1 , LIBDEF_ConstStringPtr str2 ) ;
/*       82 */  extern LIBDEF_StringPtr strstr ( LIBDEF_ConstStringPtr str1 , LIBDEF_ConstStringPtr str2 ) ;
/*       83 */  extern LIBDEF_StringPtr strtok ( LIBDEF_StringPtr str1 , LIBDEF_ConstStringPtr str2 ) ;
/*       84 */  extern LIBDEF_StringPtr strerror ( int errnum ) ;
/*       85 */  extern int strcoll ( LIBDEF_ConstStringPtr string1 , LIBDEF_ConstStringPtr string2 ) ;
/*       86 */  extern size_t strxfrm ( LIBDEF_StringPtr strDest , LIBDEF_ConstStringPtr strSource , size_t count ) ;
/*       99 */ 

/**** FILE 'rkhtrace.h' */


/*       77 */  typedef enum
/*       78 */  {
/*       79 */  RKH_TROK , RKH_TREMPTY
/*       80 */  } RKHTR_RC ;
/*       88 */  typedef enum
/*       89 */  {
/*       90 */  RKH_TRSTOP , RKH_TRSTART
/*       91 */  } RKHTR_CTRL ;
/*      100 */  typedef enum
/*      101 */  {
/*      102 */  RKH_TRNPRINT , RKH_TRPRINT
/*      103 */  } RKHTR_CFGPRT ;
/*      112 */  typedef enum
/*      113 */  {
/*      114 */  RKH_TRNLOG , RKH_TRLOG
/*      115 */  } RKHTR_CFGLOG ;
/*      126 */  typedef enum
/*      127 */  {
/*      132 */  RKHTR_EVENT ,
/*      138 */  RKHTR_TRN_SRC ,
/*      144 */  RKHTR_TRN_TGT ,
/*      150 */  RKHTR_NXT_STATE ,
/*      156 */  RKHTR_INT_TRAN ,
/*      162 */  RKHTR_ENTRY ,
/*      168 */  RKHTR_EXIT ,
/*      175 */  RKHTR_INIT_HSM ,
/*      182 */  RKHTR_SGT_TGT ,
/*      189 */  RKHTR_RTN_CODE ,
/*      196 */  RKHTR_NUM_ENEX ,
/*      203 */  RKHTR_NUM_ACTSGT ,
/*      205 */  RKHTR_NUM_EVENTS
/*      206 */  } RKHTR_EVENTS ;
/*      218 */  typedef rkhuint16 RKHTS_T ;
/*      424 */  typedef struct
/*      425 */  {
/*      431 */  unsigned enable : 1 ;
/*      437 */  unsigned print : 1 ;
/*      443 */  unsigned log : 1 ;
/*      449 */  unsigned res : 5 ;
/*      450 */  } RKHTRCFG_T ;
/*      459 */  typedef struct
/*      460 */  {
/*      465 */  rkhuint8 id ;
/*      472 */  rkhuint8 smix ;
/*      481 */  RKHTS_T ts ;
/*      488 */  rkhuint8 num ;
/*      497 */  char sb [ 4 + 1 ] ;
/*      499 */  } RKHTREVT_T ;
/*      506 */  void rkh_trinit ( void ) ;
/*      525 */  void rkh_trconfig ( HUInt trix , HUInt log , HUInt print ) ;
/*      538 */  void rkh_trcontrol ( HUInt trix , HUInt opt ) ;
/*      553 */  RKHTRCFG_T * rkh_trgetcfg ( HUInt trix ) ;
/*      568 */  void rkh_trevt ( RKHTREVT_T * ptre ) ;
/*      583 */  HUInt rkh_trgetnext ( RKHTREVT_T * ptre ) ;
/*      594 */  rkhuint16 rkh_trgetqty ( void ) ;
/*      606 */  void rkh_trace_open ( void ) ;
/*      617 */  void rkh_trace_close ( void ) ;
/*      631 */  void rkh_trace_flush ( void ) ;
/*      647 */  RKHTS_T rkh_trace_getts ( void ) ;
/*      653 */ 

/**** FILE 'rkh.h' */


/*      183 */  typedef rkhuint8 RKHE_T ;
/*      210 */  typedef struct
/*      211 */  {
/*      212 */  RKHE_T evt ;
/*      213 */  } RKHEVT_T ;
/*      220 */  struct rkh_t ;
/*      237 */  typedef void ( * RKHENT_T ) ( const struct rkh_t * ph ) ;
/*      272 */  typedef void ( * RKHEXT_T ) ( const struct rkh_t * ph ) ;
/*      307 */  typedef void ( * RKHINIT_T ) ( const struct rkh_t * ph ) ;
/*      335 */  typedef RKHE_T ( * RKHPPRO_T ) ( RKHEVT_T * pe ) ;
/*      352 */  typedef void ( * RKHACT_T ) ( const struct rkh_t * ph , RKHEVT_T * pe ) ;
/*      391 */  typedef HUInt ( * RKHGUARD_T ) ( const struct rkh_t * ph , RKHEVT_T * pe ) ;
/*      422 */  typedef RKHE_T ( * RKHBRANCH_T ) ( const struct rkh_t * ph , RKHEVT_T * pe ) ;
/*      449 */  typedef struct rkhbase_t
/*      450 */  {
/*      463 */  HUInt type ;
/*      470 */  HUInt id ;
/*      480 */  char * name ;
/*      482 */  } RKHBASE_T ;
/*      495 */  typedef struct rkhtr_t
/*      496 */  {
/*      501 */  RKHE_T event ;
/*      507 */  RKHGUARD_T guard ;
/*      513 */  RKHACT_T action ;
/*      519 */  rkhrom void * target ;
/*      520 */  } RKHTR_T ;
/*      531 */  typedef struct rkhsreg_t
/*      532 */  {
/*      537 */  struct rkhbase_t base ;
/*      543 */  RKHENT_T enter ;
/*      549 */  RKHEXT_T exit ;
/*      555 */  rkhrom struct rkhsreg_t * parent ;
/*      561 */  rkhrom struct rkhtr_t * trtbl ;
/*      567 */  rkhrom void * defchild ;
/*      573 */  rkhrom struct rkhshist_t * history ;
/*      579 */  RKHPPRO_T prepro ;
/*      580 */  } RKHSREG_T ;
/*      589 */  typedef struct rkhscond_t
/*      590 */  {
/*      595 */  struct rkhbase_t base ;
/*      601 */  RKHBRANCH_T cdl ;
/*      607 */  rkhrom struct rkhtr_t * trtbl ;
/*      608 */  } RKHSCOND_T ;
/*      617 */  typedef struct rkhsjunct_t
/*      618 */  {
/*      623 */  struct rkhbase_t base ;
/*      629 */  RKHACT_T action ;
/*      635 */  rkhrom void * target ;
/*      636 */  } RKHSJUNC_T ;
/*      647 */  typedef struct rkhshist_t
/*      648 */  {
/*      653 */  struct rkhbase_t base ;
/*      659 */  rkhrom RKHSREG_T * parent ;
/*      666 */  rkhrom RKHSREG_T * * target ;
/*      667 */  } RKHSHIST_T ;
/*      679 */  typedef struct rkh_info_t
/*      680 */  {
/*      681 */  rkhuint16 rcvevt ;
/*      682 */  rkhuint16 exectr ;
/*      683 */  } RKH_INFO_T ;
/*      695 */  typedef struct rkh_t
/*      696 */  {
/*      701 */  rkhuint8 id ;
/*      707 */  rkhuint8 ppty ;
/*      717 */  char * name ;
/*      724 */  rkhrom RKHSREG_T * init_state ;
/*      730 */  rkhrom RKHSREG_T * state ;
/*      736 */  RKHINIT_T init_action ;
/*      743 */  void * hdata ;
/*      753 */  } RKH_T ;
/*      759 */ 

/**** FILE 'C:\Users\francucci\Desktop\rkhrel\source\include\rkhsm.h' */


/*       49 */  typedef enum
/*       50 */  {
/*       56 */  RKH_OK ,
/*       62 */  RKH_INPUT_NOT_FOUND ,
/*       68 */  RKH_CONDITIONAL_NOT_FOUND ,
/*       75 */  RKH_CONDITION_NOT_FOUND ,
/*       81 */  RKH_GUARD_FALSE ,
/*       87 */  RKH_UNKNOWN_STATE ,
/*       93 */  RKH_EXCEED_HCAL_LEVEL ,
/*      100 */  RKH_EXCEED_TR_SEGS ,
/*      107 */  RKH_IN_TERMINAL ,
/*      110 */  RKH_NUM_CODES
/*      111 */  } RKH_RCODE_T ;
/*      481 */  enum
/*      482 */  {
/*      483 */  RKH_GFALSE ,
/*      484 */  RKH_GTRUE
/*      485 */  } ;
/*      495 */  void rkh_init_hsm ( RKH_T * ph ) ;
/*      516 */  HUInt rkh_engine ( RKH_T * ph , RKHEVT_T * pevt ) ;
/*      572 */  void rkh_clear_history ( rkhrom RKHSHIST_T * h ) ;
/*      591 */  void rkh_clear_info ( RKH_T * ph ) ;
/*      609 */  RKH_INFO_T * rkh_get_info ( RKH_T * ph ) ;