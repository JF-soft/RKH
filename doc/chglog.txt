/**
\page changelog Changelog
\image html rkh_bunner.jpg

Prev: \ref main_page "Home" \n

\code
Changes between V2.4 and V2.4.3 released 07/15/2013

+ 	Add the cross-platform demo 'shared' for s08 and x86 platforms. 
+	Adds ARM Cortex-M0+ on Freedom KL25Z board.
+	Adds sender object (and macro RKH_CFG_SMA_TRC_SENDER_EN to rkhcfg.h) to 
	rkh_tmr_tick(), and rkh_sma_post_fifo(), and rkh_sma_post_lifo(). 
+	Adds macros RKH_TIM_TICK, RKH_SMA_POST_FIFO/_LIFO to invoke functions 
	rkh_tmr_tick(), and rkh_sma_post_fifo(), and rkh_sma_post_lifo().
+	Removes RKH_TRC_MAX_EVENTS from rkhcfg.h file.
+ 	Adds the RKH_TR_RQ_FULL macro from rkh_rq_put_fifo() and 
	rkh_rq_put_lifo() functions.
+	Add RKH_VERSION_CODE to RKH_TR_FWK_TCFG.
+	Update comments.
+	Changes RKH_TRC_EN_SM_CSTATE by RKH_CFG_TRC_SM_TS_STATE_EN.
+	Changes RKH_TE_SM_CSTATE by RKH_TE_SM_TS_STATE.
+	Adds choice pseudostate.
+	Adds macros RKH_GET_PRIO() and RKH_GET_SMA().
+	Adds macros RKH_ARRAY_SMA_CREATE() and RKH_ARRAY_SMA_DCLR().
+	Adds assert in rkh_rq_put_fifo()/lifo() when queue is full.
+	Adds a little code in favor of defensive programming (rkhmp.c).
+	Adds new arguments to trace event macros. See "trace event table".
+	Adds macros RKH_EVT_CAST() and RKH_CAST().
+	Updating the configuration table and preprocessor checking in rkhitl.h.
+	Adds to RKH_ST_T structure (base structure for basic, composite and 
	submachine states) the "trtbl" member (pointer to transition table), as 
	new basic attribute.
+	

Changes between V2.3 and V2.4 released 05/03/2013 

+ 	Add the cross-platform demo 'blinky' for arm-cortex, s08 and coldfire v1. 
+ 	Add the arm-cortex port. 
+ 	Add RKH_CFG_TICK_RATE_HZ and RKH_TICK_RATE_MS constants. 
+ 	Fix RKH_FILTER_OFF_GROUP_ALL_EVENTS() and 
	RKH_FILTER_ON_GROUP_ALL_EVENTS() macros. 
+ 	Eliminated the rkhdata.h file from demos. 

Changes between V2.2 and V2.3 released 02/05/2013

+	Enhance the runtime trace filter.
+	Enhance the software timer module.
+	Fix the linux port.
+	Add arbitrary trace records to be used in the application space.
+	Add the configuration option RKH_CFG_TRC_USER_TRACE_EN for enabling/disabling 
	the user trace records.
+	Add the macro RKH_TR_FWK_TUSR() for sending to Trazer a symbolic name of 
	the user-defined trace event.
+ 	Move the configurations RKH_EN_SMA_THREAD, RKH_EN_SMA_THREAD_DATA, 
	RKH_EN_NATIVE_SCHEDULER, RKH_EN_NATIVE_EQUEUE, RKH_EN_NATIVE_DYN_EVENT, 
	and RKH_EN_REENTRANT from rkhcfg.h to rkhport.h file to achieve the 
	platform independence in rkhcfg.h file.
+	Add macro RKH_TR_FWK_TCFG() to send the trace configuration parameters to 
	Trazer.
+	Add RKH_CFG_TRC_ASSERT_EN configuration to rkhcfg.h file, RKH_TE_FWK_ASSERT 
	trace record and RKH_TR_FWK_ASSERT() macro to RKH_ASSERT() macro.
+	Eliminated RKH_TIM_EN_RESTART from rkhcfg.h.

Changes between V2.1 and V2.2 released 08/13/2012

+	Elimate RKH_MP_QUERY definition and change RKH_MP_GET_BLKSIZE to 
	RKH_MP_GET_BSIZE.
+	Add S08 port files.
+	Delete the CRR() macro.
+	Add a active object runtime filter to emmit or suppress all events 
	from a specified AO, by means of RKH_FILTER_ON_SMA() and 
	RKH_FILTER_OFF_SMA() macros. See the main.c demo file. Used to clean 
	up the trazer output.
+	Change the args of RKH_REQUIRE() macro in rkh_sma_register() function.
+	Add RKH_TRC_FLUSH() macro in RKH_TRCR_RKH_OBJ() and RKH_TRCR_RKH_SIG().
+	Fix the name of the deplete queue (rkh_rq_deplete()).
+	Add CCE() macro.
+	Add RKH_RESERVE() macro.
+	Fix the RKH_TRC_CLOSE() macro.
+	Delete trazer.c and trazer.h files.
+	Add tcptrc.c and tcptrc.h files to demo projects.
+	Add support to trazer program in ahsm and subm projects.
+	Add RKH_TRC_OPEN, RKH_TRC_CLOSE, and RKH_TRC_FLUSH.
+	Add CV() macro.
+	Fix a bug in rkhtim.c file. Complete the RKH_SET_THOOK() macro when 
	configuring RKH_CFG_TMR_HOOK_EN = 0.
+	Change 80x86 port files. Relocate the event pool from rkhport.c to 
	bsp.c file, in rkh_hook_start() hook function. Now, the usage of event 
	pools is resposability of the application.
+	Fix a bug in RKH_SMA_BLOCK() macro.
+	Fix a bug in rkh_rq_get() function, when invocking the rkh_fwk_recall() 
	function.
+	Fix a bug in rkh_tmr_restart() function RKH_REQUIRE() args.
+	Fix a bug in rkh_fwk_defer() function. Also, include an internal macro 
	RKH_INC_REF() to avoid the dependence of dynamic event in deferral 
	mechanism.
+	Fix a bug in rkh_add_tr_action() function.

Changes between V2.0 and V2.1 released 05/09/2012

+	Added a submachine state and demo application "subm" to illustrate 
	the submachine usage.

Changes between V1.1.6 and V2.0 released 04/13/2012

+	Added a platform abstraction layer.
+	Added queue, software timer and dynamic memory modules.
+	Added a dispatching event mechanism based on active object's priority.
+	Because of applied drastic changes this release is not compatible 
	with previous releases.

Changes between V1.1.6 and V1.1.5 released 02/13/2012

+	Fixed bug in call rkhallege() macro.
+	Fixed bug in rkhallege(), rkhrequire(), rkhensure(), and rkhinvariant() macro.

Changes between V1.1.4 and V1.1.5 released 02/01/2012

+	Added support for Codewarrior Coldfire V1.
+	Added RKH_ROM_STATIC_EVENT macro to declare and initialize a event object as one static event.
+	Added a new configuration option RKH_EN_STATE_ID to reduce the state structure.
+	Added RKH_DCLR_SM_GLOBAL macro to declare a state machine object as global pointer.
+	Added assertions within rkh.c module.
+	Added assertion events in rkhtrace.h.
+	Added definition of rkh_trace_getts() in rkhtrace.h.
+	Added condition \#if RKH_CFG_EN_DYNAMIC_EVENT == 1 to include rkh_put_fifo() and rkh_put_lifo() functions.
+	Added checks every config. options from rkhcfg.h in rkhitl.h.
+	Enhanced tested version of rkh_engine() function with TEST_GUARD option, see code.
+	Tested version of rkh_engine() function with TEST_GUARD option, see code.
+	Fixed rkh_tropen, rkh_trclose, rkh_trflush and rkh_trgetts macro definitions.
+	Fixed rkh_tropen, rkh_trclose, rkh_trflush and rkh_trgetts macro definitions.
+	Changed internal RKH_T structure definition to reduce the use of precious RAM when instantiating a state machine.
+	Added: if is not defined RKH_EN_DOXYGEN then RKH_EN_DOXYGEN = 0
+	Added RKH_EN_RT_INIT_HSM_OBJ preprocessor option to include rkh_init_hsm_obj() function. Frequently, this function is not used.
+	Added rkh_init_hsm_obj() function to initialize a RKH_T structure in runtime.
+	Changed RKH_CREATE_HSM and RKH_DCLR_HSM macros to implement a easy way for deriving state machine structures from RKH_T.
+	Added dynamic and defer event support. This facility is implemented by means of 
	rkh_fwk_ae(), rkh_gc(), rkh_put_fifo(), rkh_put_lifo(), rkh_fwk_defer() and rkh_fwk_recall() and
	added member dynamic_ to RKH_EVT_T structure.
+	Changed rkh.h file name to rkhitl.h.
+	Changed rkhsm.h file name to rkh.h.
+	Added rkh_enter_critical() and rkh_exit_critical() to be defined within rkhport.h 
	file.
+	Added assert feature. This facility is defined in rkhassert.h file.
+	Eliminated rkhdata.h dependence from rkhtrace.c and rkh.c files.
+	Added RKH_NUM_STATE_MACHINES directive in rkhcfg.h and rkhtrace.c files.
+	Added enhanced checks to platform-dependent functions within rkhtrace.h.
+	Added mksevt() macro.

Changes between V1.1.3 and V1.1.4 released 06/10/2011

+	Changed RKH_PPRO_T type to support pointer to HSM as argument.
+	Added RKH_EN_PPRO_HSM_ARG configuration.
+	Added RKH_HPPTY_T enumeration to be used in RKH_CREATE_HSM() macro.
+	Update demo and doc files.

Changes between V1.1.2 and V1.1.3 released 05/19/2011

+	Changed RKH_EVT_T data type.
+	Added rkh_get_sdata() macro to rkhsm.h file.
+	Added state's abstract data by means of single inheritance.
+	Update demo and doc files.

Changes between V1.1.0 and V1.1.2 released 05/05/2011

+	Changed external transition to local transition support. Therefore, 
	just modified rkh_define_ex_en_states() macro to support this feature 
	according to UML 2.0.
+	Modified demo directory to test local transition feature and added 
	some improvements to main.c file.
+	Fixed and update doc files.

Changes between V1.0.0 and V1.1.0 released 05/03/2011

+	Added rkh_else function to be used when if all the guards on 
	the other branches are false.
+	Changed conditional (branch) pseudostate related macros. Therefore, 
	the demo and doc files too.
+	Changed macros RKH_CREATE_*_STATE, RKH_CREATE_TRANS_TABLE and 
	RKH_END_TRANS_TABLE. 
+	Fixed VC08 project settings.
+	Changed demo files.
\endcode

Prev: \ref main_page "Home" \n
*/
