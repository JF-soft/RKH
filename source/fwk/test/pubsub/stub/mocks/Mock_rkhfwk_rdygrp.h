/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_RKHFWK_RDYGRP_H
#define _MOCK_RKHFWK_RDYGRP_H

#include "rkhfwk_rdygrp.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mock_rkhfwk_rdygrp_Init(void);
void Mock_rkhfwk_rdygrp_Destroy(void);
void Mock_rkhfwk_rdygrp_Verify(void);




#define rkh_rdygrp_init_Ignore() rkh_rdygrp_init_CMockIgnore()
void rkh_rdygrp_init_CMockIgnore(void);
#define rkh_rdygrp_init_Expect(me) rkh_rdygrp_init_CMockExpect(__LINE__, me)
void rkh_rdygrp_init_CMockExpect(UNITY_LINE_TYPE cmock_line, RKHRdyGrp* const me);
typedef void (* CMOCK_rkh_rdygrp_init_CALLBACK)(RKHRdyGrp* const me, int cmock_num_calls);
void rkh_rdygrp_init_StubWithCallback(CMOCK_rkh_rdygrp_init_CALLBACK Callback);
#define rkh_rdygrp_init_IgnoreArg_me() rkh_rdygrp_init_CMockIgnoreArg_me(__LINE__)
void rkh_rdygrp_init_CMockIgnoreArg_me(UNITY_LINE_TYPE cmock_line);
#define rkh_rdygrp_isReady_IgnoreAndReturn(cmock_retval) rkh_rdygrp_isReady_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void rkh_rdygrp_isReady_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, rbool_t cmock_to_return);
#define rkh_rdygrp_isReady_ExpectAndReturn(me, cmock_retval) rkh_rdygrp_isReady_CMockExpectAndReturn(__LINE__, me, cmock_retval)
void rkh_rdygrp_isReady_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, RKHRdyGrp* const me, rbool_t cmock_to_return);
typedef rbool_t (* CMOCK_rkh_rdygrp_isReady_CALLBACK)(RKHRdyGrp* const me, int cmock_num_calls);
void rkh_rdygrp_isReady_StubWithCallback(CMOCK_rkh_rdygrp_isReady_CALLBACK Callback);
#define rkh_rdygrp_isReady_IgnoreArg_me() rkh_rdygrp_isReady_CMockIgnoreArg_me(__LINE__)
void rkh_rdygrp_isReady_CMockIgnoreArg_me(UNITY_LINE_TYPE cmock_line);
#define rkh_rdygrp_setReady_Ignore() rkh_rdygrp_setReady_CMockIgnore()
void rkh_rdygrp_setReady_CMockIgnore(void);
#define rkh_rdygrp_setReady_Expect(me, prio) rkh_rdygrp_setReady_CMockExpect(__LINE__, me, prio)
void rkh_rdygrp_setReady_CMockExpect(UNITY_LINE_TYPE cmock_line, RKHRdyGrp* const me, rui8_t prio);
typedef void (* CMOCK_rkh_rdygrp_setReady_CALLBACK)(RKHRdyGrp* const me, rui8_t prio, int cmock_num_calls);
void rkh_rdygrp_setReady_StubWithCallback(CMOCK_rkh_rdygrp_setReady_CALLBACK Callback);
#define rkh_rdygrp_setReady_IgnoreArg_me() rkh_rdygrp_setReady_CMockIgnoreArg_me(__LINE__)
void rkh_rdygrp_setReady_CMockIgnoreArg_me(UNITY_LINE_TYPE cmock_line);
#define rkh_rdygrp_setReady_IgnoreArg_prio() rkh_rdygrp_setReady_CMockIgnoreArg_prio(__LINE__)
void rkh_rdygrp_setReady_CMockIgnoreArg_prio(UNITY_LINE_TYPE cmock_line);
#define rkh_rdygrp_setUnready_Ignore() rkh_rdygrp_setUnready_CMockIgnore()
void rkh_rdygrp_setUnready_CMockIgnore(void);
#define rkh_rdygrp_setUnready_Expect(me, prio) rkh_rdygrp_setUnready_CMockExpect(__LINE__, me, prio)
void rkh_rdygrp_setUnready_CMockExpect(UNITY_LINE_TYPE cmock_line, RKHRdyGrp* const me, rui8_t prio);
typedef void (* CMOCK_rkh_rdygrp_setUnready_CALLBACK)(RKHRdyGrp* const me, rui8_t prio, int cmock_num_calls);
void rkh_rdygrp_setUnready_StubWithCallback(CMOCK_rkh_rdygrp_setUnready_CALLBACK Callback);
#define rkh_rdygrp_setUnready_IgnoreArg_me() rkh_rdygrp_setUnready_CMockIgnoreArg_me(__LINE__)
void rkh_rdygrp_setUnready_CMockIgnoreArg_me(UNITY_LINE_TYPE cmock_line);
#define rkh_rdygrp_setUnready_IgnoreArg_prio() rkh_rdygrp_setUnready_CMockIgnoreArg_prio(__LINE__)
void rkh_rdygrp_setUnready_CMockIgnoreArg_prio(UNITY_LINE_TYPE cmock_line);
#define rkh_rdygrp_findHighest_IgnoreAndReturn(cmock_retval) rkh_rdygrp_findHighest_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void rkh_rdygrp_findHighest_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, rui8_t cmock_to_return);
#define rkh_rdygrp_findHighest_ExpectAndReturn(me, cmock_retval) rkh_rdygrp_findHighest_CMockExpectAndReturn(__LINE__, me, cmock_retval)
void rkh_rdygrp_findHighest_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, RKHRdyGrp* const me, rui8_t cmock_to_return);
typedef rui8_t (* CMOCK_rkh_rdygrp_findHighest_CALLBACK)(RKHRdyGrp* const me, int cmock_num_calls);
void rkh_rdygrp_findHighest_StubWithCallback(CMOCK_rkh_rdygrp_findHighest_CALLBACK Callback);
#define rkh_rdygrp_findHighest_IgnoreArg_me() rkh_rdygrp_findHighest_CMockIgnoreArg_me(__LINE__)
void rkh_rdygrp_findHighest_CMockIgnoreArg_me(UNITY_LINE_TYPE cmock_line);

#endif
